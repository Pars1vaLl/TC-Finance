{"version":3,"file":"index-76d42c83.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/services/auth.ts","../../src/contexts/AuthContext.tsx","../../src/components/ProtectedRoute.tsx","../../src/components/AuthCallback.tsx","../../src/components/Header.tsx","../../src/components/Sidebar.tsx","../../src/components/Layout.tsx","../../src/pages/LoginPage.tsx","../../src/services/api.ts","../../src/hooks/useReport.ts","../../src/components/charts/KPICards.tsx","../../src/components/charts/RevenueProfitChart.tsx","../../src/components/charts/ProfitMarginChart.tsx","../../src/components/charts/WarehousePerformanceChart.tsx","../../src/pages/DashboardPage.tsx","../../src/hooks/useMetadata.ts","../../src/pages/TransactionPage.tsx","../../src/pages/ReferenceDataPage.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// Google OAuth 2.0 with PKCE implementation\r\nexport interface GoogleUser {\r\n  id: string\r\n  email: string\r\n  name: string\r\n  picture: string\r\n  given_name: string\r\n  family_name: string\r\n}\r\n\r\nexport interface AuthTokens {\r\n  access_token: string\r\n  id_token: string\r\n  expires_in: number\r\n  token_type: string\r\n}\r\n\r\n// Generate PKCE code verifier and challenge\r\nfunction generateCodeVerifier(): string {\r\n  const array = new Uint8Array(32)\r\n  crypto.getRandomValues(array)\r\n  return btoa(String.fromCharCode(...array))\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_')\r\n    .replace(/=/g, '')\r\n}\r\n\r\nasync function generateCodeChallenge(verifier: string): Promise<string> {\r\n  const encoder = new TextEncoder()\r\n  const data = encoder.encode(verifier)\r\n  const digest = await crypto.subtle.digest('SHA-256', data)\r\n  \r\n  return btoa(String.fromCharCode(...new Uint8Array(digest)))\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_')\r\n    .replace(/=/g, '')\r\n}\r\n\r\n// Google OAuth configuration\r\nconst GOOGLE_CLIENT_ID = import.meta.env.VITE_GOOGLE_CLIENT_ID || 'your-google-client-id'\r\nconst GOOGLE_REDIRECT_URI = window.location.origin + '/auth/callback'\r\nconst GOOGLE_AUTH_URL = 'https://accounts.google.com/o/oauth2/v2/auth'\r\nconst GOOGLE_TOKEN_URL = 'https://oauth2.googleapis.com/token'\r\nconst GOOGLE_USERINFO_URL = 'https://www.googleapis.com/oauth2/v2/userinfo'\r\n\r\n// Scopes for Google OAuth\r\nconst SCOPES = [\r\n  'openid',\r\n  'profile',\r\n  'email'\r\n].join(' ')\r\n\r\nexport class GoogleAuthService {\r\n  private static instance: GoogleAuthService\r\n  private codeVerifier: string | null = null\r\n\r\n  static getInstance(): GoogleAuthService {\r\n    if (!GoogleAuthService.instance) {\r\n      GoogleAuthService.instance = new GoogleAuthService()\r\n    }\r\n    return GoogleAuthService.instance\r\n  }\r\n\r\n  async login(): Promise<void> {\r\n    try {\r\n      // Generate PKCE code verifier and challenge\r\n      this.codeVerifier = generateCodeVerifier()\r\n      const codeChallenge = await generateCodeChallenge(this.codeVerifier)\r\n\r\n      // Store code verifier in session storage\r\n      sessionStorage.setItem('code_verifier', this.codeVerifier)\r\n\r\n      // Build authorization URL\r\n      const authUrl = new URL(GOOGLE_AUTH_URL)\r\n      authUrl.searchParams.set('client_id', GOOGLE_CLIENT_ID)\r\n      authUrl.searchParams.set('redirect_uri', GOOGLE_REDIRECT_URI)\r\n      authUrl.searchParams.set('response_type', 'code')\r\n      authUrl.searchParams.set('scope', SCOPES)\r\n      authUrl.searchParams.set('code_challenge', codeChallenge)\r\n      authUrl.searchParams.set('code_challenge_method', 'S256')\r\n      authUrl.searchParams.set('access_type', 'offline')\r\n      authUrl.searchParams.set('prompt', 'consent')\r\n\r\n      // Redirect to Google OAuth\r\n      window.location.href = authUrl.toString()\r\n    } catch (error) {\r\n      console.error('Login error:', error)\r\n      throw new Error('Failed to initiate login')\r\n    }\r\n  }\r\n\r\n  async handleCallback(code: string): Promise<GoogleUser> {\r\n    try {\r\n      const codeVerifier = sessionStorage.getItem('code_verifier')\r\n      if (!codeVerifier) {\r\n        throw new Error('No code verifier found')\r\n      }\r\n\r\n      // Exchange code for tokens\r\n      const tokenResponse = await fetch(GOOGLE_TOKEN_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          client_id: GOOGLE_CLIENT_ID,\r\n          redirect_uri: GOOGLE_REDIRECT_URI,\r\n          code,\r\n          code_verifier: codeVerifier,\r\n          grant_type: 'authorization_code',\r\n        }),\r\n      })\r\n\r\n      if (!tokenResponse.ok) {\r\n        throw new Error('Failed to exchange code for tokens')\r\n      }\r\n\r\n      const tokens: AuthTokens = await tokenResponse.json()\r\n\r\n      // Get user info\r\n      const userResponse = await fetch(GOOGLE_USERINFO_URL, {\r\n        headers: {\r\n          Authorization: `Bearer ${tokens.access_token}`,\r\n        },\r\n      })\r\n\r\n      if (!userResponse.ok) {\r\n        throw new Error('Failed to get user info')\r\n      }\r\n\r\n      const user: GoogleUser = await userResponse.json()\r\n\r\n      // Store tokens and user info\r\n      localStorage.setItem('auth_token', tokens.access_token)\r\n      localStorage.setItem('id_token', tokens.id_token)\r\n      localStorage.setItem('user_data', JSON.stringify(user))\r\n\r\n      // Clean up\r\n      sessionStorage.removeItem('code_verifier')\r\n\r\n      return user\r\n    } catch (error) {\r\n      console.error('Callback error:', error)\r\n      throw new Error('Failed to complete authentication')\r\n    }\r\n  }\r\n\r\n  logout(): void {\r\n    // Clear all stored data\r\n    localStorage.removeItem('auth_token')\r\n    localStorage.removeItem('id_token')\r\n    localStorage.removeItem('user_data')\r\n    sessionStorage.removeItem('code_verifier')\r\n\r\n    // Redirect to login page\r\n    window.location.href = '/login'\r\n  }\r\n\r\n  getStoredUser(): GoogleUser | null {\r\n    const userData = localStorage.getItem('user_data')\r\n    if (userData) {\r\n      try {\r\n        return JSON.parse(userData)\r\n      } catch (error) {\r\n        console.error('Error parsing user data:', error)\r\n        return null\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  getStoredToken(): string | null {\r\n    return localStorage.getItem('auth_token')\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.getStoredToken() && !!this.getStoredUser()\r\n  }\r\n\r\n  // Determine user role based on email domain\r\n  getUserRole(email: string): 'Admin' | 'Clerk' | 'Viewer' {\r\n    const domain = email.split('@')[1]?.toLowerCase()\r\n    \r\n    // Example role assignment based on domain\r\n    // You can customize this logic based on your organization\r\n    if (domain === 'admin.yourcompany.com') {\r\n      return 'Admin'\r\n    } else if (domain === 'warehouse.yourcompany.com') {\r\n      return 'Clerk'\r\n    } else {\r\n      return 'Viewer'\r\n    }\r\n  }\r\n}\r\n\r\nexport const authService = GoogleAuthService.getInstance() ","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react'\r\nimport { authService } from '../services/auth'\r\n\r\nexport interface User {\r\n  id: string\r\n  email: string\r\n  name: string\r\n  picture: string\r\n  role: 'Admin' | 'Clerk' | 'Viewer'\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null\r\n  loading: boolean\r\n  login: () => Promise<void>\r\n  logout: () => void\r\n  isAuthenticated: boolean\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext)\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider')\r\n  }\r\n  return context\r\n}\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    // Check for existing session on app load\r\n    const initializeAuth = () => {\r\n      try {\r\n        const storedUser = authService.getStoredUser()\r\n        const token = authService.getStoredToken()\r\n        \r\n        if (storedUser && token) {\r\n          // Convert GoogleUser to our User interface\r\n          const user: User = {\r\n            id: storedUser.id,\r\n            email: storedUser.email,\r\n            name: storedUser.name,\r\n            picture: storedUser.picture,\r\n            role: authService.getUserRole(storedUser.email)\r\n          }\r\n          setUser(user)\r\n        }\r\n      } catch (error) {\r\n        console.error('Error initializing auth:', error)\r\n        // Clear any corrupted data\r\n        authService.logout()\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    initializeAuth()\r\n  }, [])\r\n\r\n  const login = async () => {\r\n    try {\r\n      setLoading(true)\r\n      await authService.login()\r\n      // The login method will redirect to Google OAuth\r\n      // The callback will be handled by the AuthCallback component\r\n    } catch (error) {\r\n      console.error('Login error:', error)\r\n      setLoading(false)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    setUser(null)\r\n    authService.logout()\r\n  }\r\n\r\n\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport { authService } ","import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\r\n  const { isAuthenticated, loading } = useAuth()\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex h-screen items-center justify-center bg-gray-50\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" replace />\r\n  }\r\n\r\n  return <>{children}</>\r\n}\r\n\r\nexport default ProtectedRoute ","import { useEffect, useState } from 'react'\r\nimport { useNavigate, useSearchParams } from 'react-router-dom'\r\nimport { authService } from '../services/auth'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst AuthCallback = () => {\r\n  const [searchParams] = useSearchParams()\r\n  const navigate = useNavigate()\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  useEffect(() => {\r\n    const handleCallback = async () => {\r\n      try {\r\n        const code = searchParams.get('code')\r\n        const error = searchParams.get('error')\r\n\r\n        if (error) {\r\n          setError(`Authentication failed: ${error}`)\r\n          toast.error('Authentication failed')\r\n          setTimeout(() => navigate('/login'), 3000)\r\n          return\r\n        }\r\n\r\n        if (!code) {\r\n          setError('No authorization code received')\r\n          toast.error('No authorization code received')\r\n          setTimeout(() => navigate('/login'), 3000)\r\n          return\r\n        }\r\n\r\n        // Handle the OAuth callback\r\n        await authService.handleCallback(code)\r\n        \r\n        toast.success('Successfully logged in!')\r\n        navigate('/', { replace: true })\r\n      } catch (error) {\r\n        console.error('Auth callback error:', error)\r\n        setError('Failed to complete authentication')\r\n        toast.error('Failed to complete authentication')\r\n        setTimeout(() => navigate('/login'), 3000)\r\n      }\r\n    }\r\n\r\n    handleCallback()\r\n  }, [searchParams, navigate])\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"max-w-md w-full space-y-8\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">Authentication Error</h2>\r\n            <p className=\"mt-2 text-sm text-gray-600\">{error}</p>\r\n            <p className=\"mt-4 text-sm text-gray-500\">Redirecting to login...</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600 mx-auto\"></div>\r\n          <h2 className=\"mt-6 text-2xl font-bold text-gray-900\">Completing Login</h2>\r\n          <p className=\"mt-2 text-sm text-gray-600\">Please wait while we complete your authentication...</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthCallback ","import React from 'react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\ninterface HeaderProps {\r\n  onMenuClick?: () => void\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ onMenuClick }) => {\r\n  const { user, logout } = useAuth()\r\n\r\n  return (\r\n    <header className=\"bg-white shadow-sm border-b border-gray-200\">\r\n      <div className=\"flex h-16 items-center justify-between px-4 sm:px-6\">\r\n        <div className=\"flex items-center\">\r\n          {/* Mobile menu button */}\r\n          <button\r\n            onClick={onMenuClick}\r\n            className=\"lg:hidden p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500\"\r\n          >\r\n            <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n            </svg>\r\n          </button>\r\n          \r\n          <h1 className=\"text-lg sm:text-xl font-semibold text-gray-900 ml-2 lg:ml-0\">\r\n            Warehouse Analytics\r\n          </h1>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-2 sm:space-x-4\">\r\n          {user && (\r\n            <>\r\n              <div className=\"hidden sm:flex items-center space-x-2\">\r\n                <img\r\n                  className=\"h-8 w-8 rounded-full\"\r\n                  src={user.picture || '/default-avatar.png'}\r\n                  alt={user.name || 'User'}\r\n                />\r\n                <div className=\"flex flex-col\">\r\n                  <span className=\"text-sm font-medium text-gray-700\">\r\n                    {user.name}\r\n                  </span>\r\n                  <span className=\"text-xs text-gray-500 capitalize\">\r\n                    {user.role}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Mobile user info */}\r\n              <div className=\"sm:hidden flex items-center space-x-2\">\r\n                <img\r\n                  className=\"h-6 w-6 rounded-full\"\r\n                  src={user.picture || '/default-avatar.png'}\r\n                  alt={user.name || 'User'}\r\n                />\r\n                <span className=\"text-sm font-medium text-gray-700 truncate max-w-20\">\r\n                  {user.name}\r\n                </span>\r\n              </div>\r\n              \r\n              <button\r\n                onClick={logout}\r\n                className=\"text-sm text-gray-500 hover:text-gray-700 transition-colors px-2 py-1 rounded hover:bg-gray-100\"\r\n              >\r\n                <span className=\"hidden sm:inline\">Logout</span>\r\n                <span className=\"sm:hidden\">Exit</span>\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header ","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\ninterface SidebarProps {\r\n  isOpen?: boolean\r\n  onClose?: () => void\r\n}\r\n\r\nconst Sidebar: React.FC<SidebarProps> = ({ isOpen = false, onClose }) => {\r\n  const { user } = useAuth()\r\n\r\n  const navigation = [\r\n    { name: 'Dashboard', href: '/', icon: '📊', roles: ['Admin', 'Clerk', 'Viewer'] },\r\n    { name: 'New Transaction', href: '/transaction', icon: '➕', roles: ['Admin', 'Clerk'] },\r\n    { name: 'Reference Data', href: '/reference', icon: '📋', roles: ['Admin'] },\r\n  ]\r\n\r\n  const filteredNavigation = navigation.filter(item => \r\n    user && item.roles.includes(user.role)\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile sidebar */}\r\n      <div className={`lg:hidden fixed inset-y-0 left-0 z-50 w-64 bg-white shadow-lg transform transition-transform duration-300 ease-in-out ${\r\n        isOpen ? 'translate-x-0' : '-translate-x-full'\r\n      }`}>\r\n        <div className=\"flex h-full flex-col\">\r\n          <div className=\"flex h-16 items-center justify-between px-6\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900\">WPA</h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100\"\r\n            >\r\n              <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div className=\"flex-1 space-y-1 px-3 py-4\">\r\n            {filteredNavigation.map((item) => (\r\n              <NavLink\r\n                key={item.name}\r\n                to={item.href}\r\n                onClick={onClose}\r\n                className={({ isActive }) =>\r\n                  `flex items-center px-3 py-3 text-sm font-medium rounded-md transition-colors ${\r\n                    isActive\r\n                      ? 'bg-primary-100 text-primary-700'\r\n                      : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\r\n                  }`\r\n                }\r\n              >\r\n                <span className=\"mr-3 text-lg\">{item.icon}</span>\r\n                {item.name}\r\n              </NavLink>\r\n            ))}\r\n          </div>\r\n          <div className=\"border-t border-gray-200 p-4\">\r\n            <div className=\"text-xs text-gray-500\">\r\n              Logged in as: {user?.role || 'Unknown'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Desktop sidebar */}\r\n      <nav className=\"hidden lg:block fixed inset-y-0 left-0 z-40 w-64 bg-white shadow-lg\">\r\n        <div className=\"flex h-full flex-col\">\r\n          <div className=\"flex h-16 items-center px-6\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900\">WPA</h2>\r\n          </div>\r\n          <div className=\"flex-1 space-y-1 px-3 py-4\">\r\n            {filteredNavigation.map((item) => (\r\n              <NavLink\r\n                key={item.name}\r\n                to={item.href}\r\n                className={({ isActive }) =>\r\n                  `flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors ${\r\n                    isActive\r\n                      ? 'bg-primary-100 text-primary-700'\r\n                      : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\r\n                  }`\r\n                }\r\n              >\r\n                <span className=\"mr-3\">{item.icon}</span>\r\n                {item.name}\r\n              </NavLink>\r\n            ))}\r\n          </div>\r\n          <div className=\"border-t border-gray-200 p-4\">\r\n            <div className=\"text-xs text-gray-500\">\r\n              Logged in as: {user?.role || 'Unknown'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sidebar ","import React, { useState } from 'react'\r\nimport { Outlet } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Sidebar from './Sidebar'\r\n\r\nconst Layout: React.FC = () => {\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Mobile sidebar overlay */}\r\n      {sidebarOpen && (\r\n        <div \r\n          className=\"fixed inset-0 z-40 bg-black bg-opacity-50 lg:hidden\"\r\n          onClick={() => setSidebarOpen(false)}\r\n        />\r\n      )}\r\n\r\n      {/* Sidebar */}\r\n      <Sidebar isOpen={sidebarOpen} onClose={() => setSidebarOpen(false)} />\r\n\r\n      {/* Main content */}\r\n      <div className=\"lg:pl-64\">\r\n        {/* Header */}\r\n        <Header onMenuClick={() => setSidebarOpen(true)} />\r\n\r\n        {/* Page content */}\r\n        <main className=\"p-4 sm:p-6 lg:p-8\">\r\n          <Outlet />\r\n        </main>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout ","import React from 'react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const { login, loading } = useAuth()\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      await login()\r\n    } catch (error) {\r\n      console.error('Login failed:', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <div className=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-primary-100\">\r\n            <span className=\"text-2xl\">📊</span>\r\n          </div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Warehouse Profit Analytics\r\n          </h2>\r\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n            Sign in to access your warehouse data\r\n          </p>\r\n        </div>\r\n        <div className=\"mt-8 space-y-6\">\r\n          <button\r\n            onClick={handleLogin}\r\n            disabled={loading}\r\n            className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n          >\r\n            {loading ? (\r\n              <div className=\"flex items-center\">\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                Signing in...\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <svg className=\"w-5 h-5 mr-2\" viewBox=\"0 0 24 24\">\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\r\n                  />\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\r\n                  />\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\r\n                  />\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\r\n                  />\r\n                </svg>\r\n                Sign in with Google\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage ","// API service for communicating with Google Apps Script backend\r\n\r\nconst API_BASE_URL = import.meta.env.VITE_GOOGLE_SHEETS_API_URL\r\n\r\n// Types for API responses\r\nexport interface Warehouse {\r\n  id: string\r\n  name: string\r\n  emoji: string\r\n  color: string\r\n}\r\n\r\nexport interface CostType {\r\n  id: string\r\n  name: string\r\n  is_direct: boolean\r\n}\r\n\r\nexport interface Transaction {\r\n  id: string\r\n  date: string\r\n  warehouse_id: string\r\n  cost_type_id: string\r\n  is_income: boolean\r\n  amount: number\r\n  currency: string\r\n  amount_tjs: number\r\n}\r\n\r\nexport interface TransactionCreate {\r\n  date: string\r\n  warehouse_id: string\r\n  cost_type_id: string\r\n  is_income: boolean\r\n  amount: number\r\n  currency: string\r\n}\r\n\r\nexport interface WarehouseCreate {\r\n  name: string\r\n  emoji: string\r\n  color: string\r\n}\r\n\r\nexport interface CostTypeCreate {\r\n  name: string\r\n  is_direct: boolean\r\n}\r\n\r\nexport interface ReportSummary {\r\n  totalRevenue: number\r\n  totalExpenses: number\r\n  grossProfit: number\r\n  profitMargin: number\r\n  transactionCount: number\r\n  warehouseCount: number\r\n}\r\n\r\nexport interface WarehouseStats {\r\n  id: string\r\n  name: string\r\n  emoji: string\r\n  color: string\r\n  revenue: number\r\n  expenses: number\r\n  profit: number\r\n  margin: number\r\n  transactionCount: number\r\n}\r\n\r\nexport interface Report {\r\n  month: string\r\n  summary: ReportSummary\r\n  warehouses: WarehouseStats[]\r\n}\r\n\r\nexport interface ApiResponse<T> {\r\n  data?: T\r\n  error?: string\r\n}\r\n\r\n// API client class\r\nclass ApiClient {\r\n  private baseUrl: string\r\n\r\n  constructor(baseUrl: string) {\r\n    this.baseUrl = baseUrl\r\n  }\r\n\r\n  private async request<T>(\r\n    endpoint: string,\r\n    options: RequestInit = {}\r\n  ): Promise<ApiResponse<T>> {\r\n    try {\r\n      const url = `${this.baseUrl}?path=${endpoint}`\r\n      \r\n      const response = await fetch(url, {\r\n        ...options,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...options.headers,\r\n        },\r\n      })\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}))\r\n        throw new Error(errorData.error || `HTTP ${response.status}`)\r\n      }\r\n\r\n      const data = await response.json()\r\n      return { data }\r\n    } catch (error) {\r\n      console.error(`API request failed for ${endpoint}:`, error)\r\n      return { error: error instanceof Error ? error.message : 'Unknown error' }\r\n    }\r\n  }\r\n\r\n  // Get metadata (warehouses and cost types)\r\n  async getMetadata(): Promise<ApiResponse<{ warehouses: Warehouse[]; costTypes: CostType[] }>> {\r\n    return this.request<{ warehouses: Warehouse[]; costTypes: CostType[] }>('meta')\r\n  }\r\n\r\n  // Create a new transaction\r\n  async createTransaction(transaction: TransactionCreate): Promise<ApiResponse<{ id: string; message: string }>> {\r\n    return this.request<{ id: string; message: string }>('txn', {\r\n      method: 'POST',\r\n      body: JSON.stringify(transaction),\r\n    })\r\n  }\r\n\r\n  // Create a new warehouse\r\n  async createWarehouse(warehouse: WarehouseCreate): Promise<ApiResponse<{ id: string; message: string }>> {\r\n    return this.request<{ id: string; message: string }>('warehouse', {\r\n      method: 'POST',\r\n      body: JSON.stringify(warehouse),\r\n    })\r\n  }\r\n\r\n  // Create a new cost type\r\n  async createCostType(costType: CostTypeCreate): Promise<ApiResponse<{ id: string; message: string }>> {\r\n    return this.request<{ id: string; message: string }>('costType', {\r\n      method: 'POST',\r\n      body: JSON.stringify(costType),\r\n    })\r\n  }\r\n\r\n  // Get report for a specific month\r\n  async getReport(month: string): Promise<ApiResponse<Report>> {\r\n    return this.request<Report>(`report&month=${month}`)\r\n  }\r\n\r\n  // Get snapshot data for a specific month\r\n  async getSnapshot(month: string): Promise<ApiResponse<{ transactions: Transaction[] }>> {\r\n    return this.request<{ transactions: Transaction[] }>(`snapshot&month=${month}`)\r\n  }\r\n}\r\n\r\n// Create and export the API client instance\r\nexport const apiClient = new ApiClient(API_BASE_URL || '')\r\n\r\n// Convenience functions for common API calls\r\nexport const api = {\r\n  // Metadata\r\n  getMetadata: () => apiClient.getMetadata(),\r\n  \r\n  // Transactions\r\n  createTransaction: (transaction: TransactionCreate) => apiClient.createTransaction(transaction),\r\n  \r\n  // Warehouses\r\n  createWarehouse: (warehouse: WarehouseCreate) => apiClient.createWarehouse(warehouse),\r\n  \r\n  // Cost Types\r\n  createCostType: (costType: CostTypeCreate) => apiClient.createCostType(costType),\r\n  \r\n  // Reports\r\n  getReport: (month: string) => apiClient.getReport(month),\r\n  getSnapshot: (month: string) => apiClient.getSnapshot(month),\r\n}\r\n\r\n// Utility functions\r\nexport const formatCurrency = (amount: number, currency: string = 'TJS'): string => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: currency,\r\n    minimumFractionDigits: 2,\r\n  }).format(amount)\r\n}\r\n\r\nexport const formatPercentage = (value: number): string => {\r\n  return `${value.toFixed(1)}%`\r\n}\r\n\r\nexport const getCurrentMonth = (): string => {\r\n  const now = new Date()\r\n  return `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}`\r\n}\r\n\r\nexport const getMonthName = (month: string): string => {\r\n  const [year, monthNum] = month.split('-')\r\n  const date = new Date(parseInt(year), parseInt(monthNum) - 1)\r\n  return date.toLocaleDateString('en-US', { year: 'numeric', month: 'long' })\r\n} ","import { useState, useEffect } from 'react'\r\nimport { api, Report, getCurrentMonth } from '../services/api'\r\n\r\ninterface UseReportReturn {\r\n  report: Report | null\r\n  loading: boolean\r\n  error: string | null\r\n  refetch: () => Promise<void>\r\n  setMonth: (month: string) => void\r\n  currentMonth: string\r\n}\r\n\r\nexport const useReport = (initialMonth?: string): UseReportReturn => {\r\n  const [report, setReport] = useState<Report | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [currentMonth, setCurrentMonth] = useState(initialMonth || getCurrentMonth())\r\n\r\n  const fetchReport = async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n      \r\n      const response = await api.getReport(currentMonth)\r\n      \r\n      if (response.error) {\r\n        setError(response.error)\r\n        return\r\n      }\r\n      \r\n      if (response.data) {\r\n        setReport(response.data)\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch report')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchReport()\r\n  }, [currentMonth])\r\n\r\n  const setMonth = (month: string) => {\r\n    setCurrentMonth(month)\r\n  }\r\n\r\n  return {\r\n    report,\r\n    loading,\r\n    error,\r\n    refetch: fetchReport,\r\n    setMonth,\r\n    currentMonth,\r\n  }\r\n} ","import React from 'react'\r\nimport { ReportSummary } from '../../services/api'\r\n\r\ninterface KPICardsProps {\r\n  summary: ReportSummary\r\n  loading?: boolean\r\n}\r\n\r\nconst KPICards: React.FC<KPICardsProps> = ({ summary, loading = false }) => {\r\n  if (loading) {\r\n    return (\r\n      <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-6 mb-6\">\r\n        {[1, 2, 3, 4].map(i => (\r\n          <div key={i} className=\"card\">\r\n            <div className=\"animate-pulse\">\r\n              <div className=\"h-3 bg-gray-200 rounded w-3/4 mb-2\"></div>\r\n              <div className=\"h-6 bg-gray-200 rounded w-1/2\"></div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const cards = [\r\n    {\r\n      title: 'Total Revenue',\r\n      value: summary.totalRevenue,\r\n      change: '+12.5%',\r\n      changeType: 'positive' as const,\r\n      icon: '💰',\r\n      color: 'bg-green-50 border-green-200',\r\n      textColor: 'text-green-600'\r\n    },\r\n    {\r\n      title: 'Total Expenses',\r\n      value: summary.totalExpenses,\r\n      change: '+8.2%',\r\n      changeType: 'negative' as const,\r\n      icon: '💸',\r\n      color: 'bg-red-50 border-red-200',\r\n      textColor: 'text-red-600'\r\n    },\r\n    {\r\n      title: 'Gross Profit',\r\n      value: summary.grossProfit,\r\n      change: summary.profitMargin > 0 ? '+15.3%' : '-5.2%',\r\n      changeType: summary.profitMargin > 0 ? 'positive' as const : 'negative' as const,\r\n      icon: '📈',\r\n      color: summary.profitMargin > 0 ? 'bg-blue-50 border-blue-200' : 'bg-yellow-50 border-yellow-200',\r\n      textColor: summary.profitMargin > 0 ? 'text-blue-600' : 'text-yellow-600'\r\n    },\r\n    {\r\n      title: 'Profit Margin',\r\n      value: summary.profitMargin,\r\n      change: '+2.8%',\r\n      changeType: 'positive' as const,\r\n      icon: '📊',\r\n      color: 'bg-purple-50 border-purple-200',\r\n      textColor: 'text-purple-600',\r\n      isPercentage: true\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-6 mb-6\">\r\n      {cards.map((card, index) => (\r\n        <div key={index} className={`card border-2 ${card.color}`}>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex-1 min-w-0\">\r\n              <p className=\"text-xs lg:text-sm font-medium text-gray-600 truncate\">{card.title}</p>\r\n              <p className={`text-lg lg:text-2xl font-bold ${card.textColor} truncate`}>\r\n                {card.isPercentage \r\n                  ? `${card.value.toFixed(1)}%`\r\n                  : `${card.value.toLocaleString()} TJS`\r\n                }\r\n              </p>\r\n              <p className={`text-xs font-medium ${\r\n                card.changeType === 'positive' ? 'text-green-600' : 'text-red-600'\r\n              }`}>\r\n                {card.change} from last month\r\n              </p>\r\n            </div>\r\n            <div className=\"text-2xl lg:text-3xl ml-2 flex-shrink-0\">{card.icon}</div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default KPICards ","import React from 'react'\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'\r\nimport { WarehouseStats } from '../../services/api'\r\n\r\ninterface RevenueProfitChartProps {\r\n  warehouses: WarehouseStats[]\r\n  loading?: boolean\r\n}\r\n\r\nconst RevenueProfitChart: React.FC<RevenueProfitChartProps> = ({ warehouses, loading = false }) => {\r\n  if (loading) {\r\n    return (\r\n      <div className=\"card\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Revenue vs Profit by Warehouse</h3>\r\n        <div className=\"flex items-center justify-center py-12\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600\"></div>\r\n          <span className=\"ml-2 text-gray-600\">Loading chart...</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!warehouses || warehouses.length === 0) {\r\n    return (\r\n      <div className=\"card\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Revenue vs Profit by Warehouse</h3>\r\n        <div className=\"text-center py-12\">\r\n          <p className=\"text-gray-500\">No data available for this period</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const data = warehouses.map(warehouse => ({\r\n    name: warehouse.name,\r\n    revenue: warehouse.revenue,\r\n    profit: warehouse.profit,\r\n    emoji: warehouse.emoji\r\n  }))\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Revenue vs Profit by Warehouse</h3>\r\n      <ResponsiveContainer width=\"100%\" height={250} className=\"sm:h-[300px]\">\r\n        <BarChart data={data} margin={{ top: 20, right: 10, left: 10, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis \r\n            dataKey=\"name\" \r\n            tick={{ fontSize: 11 }}\r\n            tickFormatter={(value) => {\r\n              const warehouse = data.find(d => d.name === value)\r\n              return warehouse ? `${warehouse.emoji} ${value.substring(0, 8)}...` : value\r\n            }}\r\n            angle={-45}\r\n            textAnchor=\"end\"\r\n            height={60}\r\n          />\r\n          <YAxis \r\n            tickFormatter={(value) => `${(value / 1000).toFixed(0)}k`}\r\n            tick={{ fontSize: 11 }}\r\n            width={50}\r\n          />\r\n          <Tooltip \r\n            formatter={(value: number, name: string) => [\r\n              `${value.toLocaleString()} TJS`, \r\n              name === 'revenue' ? 'Revenue' : 'Profit'\r\n            ]}\r\n            labelFormatter={(label) => {\r\n              const warehouse = data.find(d => d.name === label)\r\n              return warehouse ? `${label} ${warehouse.emoji}` : label\r\n            }}\r\n          />\r\n          <Legend wrapperStyle={{ fontSize: '12px' }} />\r\n          <Bar dataKey=\"revenue\" fill=\"#10B981\" name=\"Revenue\" />\r\n          <Bar dataKey=\"profit\" fill=\"#3B82F6\" name=\"Profit\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RevenueProfitChart ","import React from 'react'\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'\r\nimport { WarehouseStats } from '../../services/api'\r\n\r\ninterface ProfitMarginChartProps {\r\n  warehouses: WarehouseStats[]\r\n  loading?: boolean\r\n}\r\n\r\nconst ProfitMarginChart: React.FC<ProfitMarginChartProps> = ({ warehouses, loading = false }) => {\r\n  if (loading) {\r\n    return (\r\n      <div className=\"card\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Profit Margin by Warehouse</h3>\r\n        <div className=\"flex items-center justify-center py-12\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600\"></div>\r\n          <span className=\"ml-2 text-gray-600\">Loading chart...</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!warehouses || warehouses.length === 0) {\r\n    return (\r\n      <div className=\"card\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Profit Margin by Warehouse</h3>\r\n        <div className=\"text-center py-12\">\r\n          <p className=\"text-gray-500\">No data available for this period</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const data = warehouses.map(warehouse => ({\r\n    name: warehouse.name,\r\n    margin: warehouse.margin,\r\n    emoji: warehouse.emoji\r\n  }))\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Profit Margin by Warehouse</h3>\r\n      <ResponsiveContainer width=\"100%\" height={250} className=\"sm:h-[300px]\">\r\n        <LineChart data={data} margin={{ top: 20, right: 10, left: 10, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis \r\n            dataKey=\"name\" \r\n            tick={{ fontSize: 11 }}\r\n            tickFormatter={(value) => {\r\n              const warehouse = data.find(d => d.name === value)\r\n              return warehouse ? `${warehouse.emoji} ${value.substring(0, 8)}...` : value\r\n            }}\r\n            angle={-45}\r\n            textAnchor=\"end\"\r\n            height={60}\r\n          />\r\n          <YAxis \r\n            tickFormatter={(value) => `${value.toFixed(1)}%`}\r\n            tick={{ fontSize: 11 }}\r\n            width={50}\r\n          />\r\n          <Tooltip \r\n            formatter={(value: number) => [`${value.toFixed(2)}%`, 'Profit Margin']}\r\n            labelFormatter={(label) => {\r\n              const warehouse = data.find(d => d.name === label)\r\n              return warehouse ? `${label} ${warehouse.emoji}` : label\r\n            }}\r\n          />\r\n          <Legend wrapperStyle={{ fontSize: '12px' }} />\r\n          <Line \r\n            type=\"monotone\" \r\n            dataKey=\"margin\" \r\n            stroke=\"#8B5CF6\" \r\n            strokeWidth={3}\r\n            dot={{ fill: '#8B5CF6', strokeWidth: 2, r: 4 }}\r\n            activeDot={{ r: 6 }}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfitMarginChart ","import React from 'react'\r\nimport { PieChart, Pie, Cell, Tooltip, Legend, ResponsiveContainer } from 'recharts'\r\nimport { WarehouseStats } from '../../services/api'\r\n\r\ninterface WarehousePerformanceChartProps {\r\n  warehouses: WarehouseStats[]\r\n  loading?: boolean\r\n}\r\n\r\nconst WarehousePerformanceChart: React.FC<WarehousePerformanceChartProps> = ({ warehouses, loading = false }) => {\r\n  if (loading) {\r\n    return (\r\n      <div className=\"card\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Warehouse Performance Distribution</h3>\r\n        <div className=\"flex items-center justify-center py-12\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600\"></div>\r\n          <span className=\"ml-2 text-gray-600\">Loading chart...</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!warehouses || warehouses.length === 0) {\r\n    return (\r\n      <div className=\"card\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Warehouse Performance Distribution</h3>\r\n        <div className=\"text-center py-12\">\r\n          <p className=\"text-gray-500\">No data available for this period</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Filter warehouses with positive revenue\r\n  const data = warehouses\r\n    .filter(warehouse => warehouse.revenue > 0)\r\n    .map(warehouse => ({\r\n      name: warehouse.name,\r\n      value: warehouse.revenue,\r\n      profit: warehouse.profit,\r\n      margin: warehouse.margin,\r\n      emoji: warehouse.emoji,\r\n      color: warehouse.color\r\n    }))\r\n\r\n  if (data.length === 0) {\r\n    return (\r\n      <div className=\"card\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Warehouse Performance Distribution</h3>\r\n        <div className=\"text-center py-12\">\r\n          <p className=\"text-gray-500\">No revenue data available for this period</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const COLORS = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4']\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Warehouse Performance Distribution</h3>\r\n      <ResponsiveContainer width=\"100%\" height={250} className=\"sm:h-[300px]\">\r\n        <PieChart>\r\n          <Pie\r\n            data={data}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            labelLine={false}\r\n            label={({ name, percent }) => `${name.substring(0, 6)}... ${(percent * 100).toFixed(0)}%`}\r\n            outerRadius={60}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={entry.color || COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip \r\n            formatter={(value: number, _name: string, props: any) => [\r\n              `${value.toLocaleString()} TJS`, \r\n              `${props.payload.name} ${props.payload.emoji}`\r\n            ]}\r\n          />\r\n          <Legend \r\n            layout=\"horizontal\"\r\n            verticalAlign=\"bottom\"\r\n            align=\"center\"\r\n            wrapperStyle={{ fontSize: '11px', paddingTop: '10px' }}\r\n            formatter={(_value, entry: any) => (\r\n              <span style={{ color: entry.color }}>\r\n                {entry.payload.name.substring(0, 8)}... {entry.payload.emoji}\r\n              </span>\r\n            )}\r\n          />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WarehousePerformanceChart ","import React, { useState } from 'react'\r\nimport { useReport } from '../hooks/useReport'\r\nimport { getCurrentMonth, getMonthName } from '../services/api'\r\nimport KPICards from '../components/charts/KPICards'\r\nimport RevenueProfitChart from '../components/charts/RevenueProfitChart'\r\nimport ProfitMarginChart from '../components/charts/ProfitMarginChart'\r\nimport WarehousePerformanceChart from '../components/charts/WarehousePerformanceChart'\r\n\r\nconst DashboardPage: React.FC = () => {\r\n  const [selectedMonth, setSelectedMonth] = useState(getCurrentMonth())\r\n  const [selectedWarehouse, setSelectedWarehouse] = useState<string>('all')\r\n  const { report, loading, error, refetch } = useReport(selectedMonth)\r\n\r\n  const handleMonthChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedMonth(e.target.value)\r\n  }\r\n\r\n  const handleWarehouseChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedWarehouse(e.target.value)\r\n  }\r\n\r\n  const filteredWarehouses = selectedWarehouse === 'all' \r\n    ? report?.warehouses || []\r\n    : report?.warehouses?.filter(w => w.id === selectedWarehouse) || []\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Dashboard</h1>\r\n          <p className=\"text-gray-600\">Warehouse profit analytics overview</p>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"text-center py-12\">\r\n            <p className=\"text-red-600\">Error loading dashboard: {error}</p>\r\n            <button \r\n              onClick={() => refetch()}\r\n              className=\"mt-4 btn btn-primary\"\r\n            >\r\n              Retry\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Dashboard</h1>\r\n          <p className=\"text-gray-600\">Warehouse profit analytics overview</p>\r\n        </div>\r\n        <div className=\"flex flex-col sm:flex-row gap-4 mt-4 sm:mt-0\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Month\r\n            </label>\r\n            <select\r\n              value={selectedMonth}\r\n              onChange={handleMonthChange}\r\n              className=\"input\"\r\n            >\r\n              {Array.from({ length: 12 }, (_, i) => {\r\n                const date = new Date()\r\n                date.setMonth(date.getMonth() - i)\r\n                const month = date.toISOString().slice(0, 7)\r\n                return (\r\n                  <option key={month} value={month}>\r\n                    {getMonthName(month)}\r\n                  </option>\r\n                )\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Warehouse\r\n            </label>\r\n            <select\r\n              value={selectedWarehouse}\r\n              onChange={handleWarehouseChange}\r\n              className=\"input\"\r\n            >\r\n              <option value=\"all\">All Warehouses</option>\r\n              {report?.warehouses?.map(warehouse => (\r\n                <option key={warehouse.id} value={warehouse.id}>\r\n                  {warehouse.name} {warehouse.emoji}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* KPI Cards */}\r\n      {report?.summary && (\r\n        <KPICards summary={report.summary} loading={loading} />\r\n      )}\r\n\r\n      {/* Charts Grid */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <RevenueProfitChart \r\n          warehouses={filteredWarehouses} \r\n          loading={loading} \r\n        />\r\n        <ProfitMarginChart \r\n          warehouses={filteredWarehouses} \r\n          loading={loading} \r\n        />\r\n      </div>\r\n\r\n      {/* Full Width Chart */}\r\n      <div className=\"grid grid-cols-1 gap-6\">\r\n        <WarehousePerformanceChart \r\n          warehouses={filteredWarehouses} \r\n          loading={loading} \r\n        />\r\n      </div>\r\n\r\n      {/* Warehouse Details Table */}\r\n      {report?.warehouses && report.warehouses.length > 0 && (\r\n        <div className=\"card\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Warehouse Details</h3>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Warehouse\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Revenue\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Expenses\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Profit\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Margin\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Transactions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {report.warehouses.map(warehouse => (\r\n                  <tr key={warehouse.id} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center\">\r\n                        <span className=\"text-2xl mr-2\">{warehouse.emoji}</span>\r\n                        <span className=\"font-medium text-gray-900\">{warehouse.name}</span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {warehouse.revenue.toLocaleString()} TJS\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {warehouse.expenses.toLocaleString()} TJS\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className={`text-sm font-medium ${\r\n                        warehouse.profit >= 0 ? 'text-green-600' : 'text-red-600'\r\n                      }`}>\r\n                        {warehouse.profit >= 0 ? '+' : ''}{warehouse.profit.toLocaleString()} TJS\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className={`text-sm font-medium ${\r\n                        warehouse.margin >= 0 ? 'text-green-600' : 'text-red-600'\r\n                      }`}>\r\n                        {warehouse.margin >= 0 ? '+' : ''}{warehouse.margin.toFixed(1)}%\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {warehouse.transactionCount}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardPage ","import { useState, useEffect } from 'react'\r\nimport { api, Warehouse, CostType } from '../services/api'\r\n\r\n// interface Metadata {\r\n//   warehouses: Warehouse[]\r\n//   costTypes: CostType[]\r\n// }\r\n\r\ninterface UseMetadataReturn {\r\n  warehouses: Warehouse[]\r\n  costTypes: CostType[]\r\n  loading: boolean\r\n  error: string | null\r\n  refetch: () => Promise<void>\r\n}\r\n\r\nexport const useMetadata = (): UseMetadataReturn => {\r\n  const [warehouses, setWarehouses] = useState<Warehouse[]>([])\r\n  const [costTypes, setCostTypes] = useState<CostType[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  const fetchMetadata = async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n      \r\n      const response = await api.getMetadata()\r\n      \r\n      if (response.error) {\r\n        setError(response.error)\r\n        return\r\n      }\r\n      \r\n      if (response.data) {\r\n        setWarehouses(response.data.warehouses)\r\n        setCostTypes(response.data.costTypes)\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch metadata')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchMetadata()\r\n  }, [])\r\n\r\n  return {\r\n    warehouses,\r\n    costTypes,\r\n    loading,\r\n    error,\r\n    refetch: fetchMetadata,\r\n  }\r\n} ","import React, { useState } from 'react'\r\nimport { useMetadata } from '../hooks/useMetadata'\r\nimport { api, TransactionCreate } from '../services/api'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst TransactionPage: React.FC = () => {\r\n  const { warehouses, costTypes, loading: metadataLoading, error: metadataError } = useMetadata()\r\n  \r\n  const [formData, setFormData] = useState<TransactionCreate>({\r\n    date: new Date().toISOString().split('T')[0],\r\n    warehouse_id: '',\r\n    cost_type_id: '',\r\n    is_income: false,\r\n    amount: 0,\r\n    currency: 'TJS'\r\n  })\r\n  \r\n  const [submitting, setSubmitting] = useState(false)\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!formData.warehouse_id || !formData.cost_type_id || formData.amount <= 0) {\r\n      toast.error('Please fill in all required fields')\r\n      return\r\n    }\r\n\r\n    try {\r\n      setSubmitting(true)\r\n      const response = await api.createTransaction(formData)\r\n      \r\n      if (response.error) {\r\n        toast.error(response.error)\r\n        return\r\n      }\r\n      \r\n      toast.success('Transaction created successfully!')\r\n      \r\n      // Reset form\r\n      setFormData({\r\n        date: new Date().toISOString().split('T')[0],\r\n        warehouse_id: '',\r\n        cost_type_id: '',\r\n        is_income: false,\r\n        amount: 0,\r\n        currency: 'TJS'\r\n      })\r\n    } catch (error) {\r\n      toast.error('Failed to create transaction')\r\n    } finally {\r\n      setSubmitting(false)\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (field: keyof TransactionCreate, value: any) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }))\r\n  }\r\n\r\n  if (metadataLoading) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">New Transaction</h1>\r\n          <p className=\"text-gray-600\">Add a new income or expense transaction</p>\r\n        </div>\r\n        <div className=\"card max-w-2xl\">\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600\"></div>\r\n            <span className=\"ml-2 text-gray-600\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (metadataError) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">New Transaction</h1>\r\n          <p className=\"text-gray-600\">Add a new income or expense transaction</p>\r\n        </div>\r\n        <div className=\"card max-w-2xl\">\r\n          <div className=\"text-center py-12\">\r\n            <p className=\"text-red-600\">Error loading data: {metadataError}</p>\r\n            <button \r\n              onClick={() => window.location.reload()}\r\n              className=\"mt-4 btn btn-primary\"\r\n            >\r\n              Retry\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">New Transaction</h1>\r\n        <p className=\"text-gray-600\">Add a new income or expense transaction</p>\r\n      </div>\r\n      \r\n      <div className=\"card max-w-2xl\">\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">\r\n                Warehouse *\r\n              </label>\r\n              <select \r\n                className=\"input mt-1\"\r\n                value={formData.warehouse_id}\r\n                onChange={(e) => handleInputChange('warehouse_id', e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select warehouse...</option>\r\n                {warehouses.map(warehouse => (\r\n                  <option key={warehouse.id} value={warehouse.id}>\r\n                    {warehouse.emoji} {warehouse.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">\r\n                Transaction Type *\r\n              </label>\r\n              <select \r\n                className=\"input mt-1\"\r\n                value={formData.cost_type_id}\r\n                onChange={(e) => handleInputChange('cost_type_id', e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select type...</option>\r\n                {costTypes.map(costType => (\r\n                  <option key={costType.id} value={costType.id}>\r\n                    {costType.name} {costType.is_direct ? '(Direct)' : '(Indirect)'}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">\r\n                Amount *\r\n              </label>\r\n              <input \r\n                type=\"number\" \r\n                className=\"input mt-1\" \r\n                placeholder=\"0.00\"\r\n                value={formData.amount}\r\n                onChange={(e) => handleInputChange('amount', parseFloat(e.target.value) || 0)}\r\n                min=\"0\"\r\n                step=\"0.01\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">\r\n                Currency\r\n              </label>\r\n              <select \r\n                className=\"input mt-1\"\r\n                value={formData.currency}\r\n                onChange={(e) => handleInputChange('currency', e.target.value)}\r\n              >\r\n                <option value=\"TJS\">TJS</option>\r\n                <option value=\"USD\">USD</option>\r\n                <option value=\"EUR\">EUR</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">\r\n              Date\r\n            </label>\r\n            <input \r\n              type=\"date\" \r\n              className=\"input mt-1\"\r\n              value={formData.date}\r\n              onChange={(e) => handleInputChange('date', e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"flex items-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50\"\r\n                checked={formData.is_income}\r\n                onChange={(e) => handleInputChange('is_income', e.target.checked)}\r\n              />\r\n              <span className=\"ml-2 text-sm text-gray-700\">This is income (not expense)</span>\r\n            </label>\r\n          </div>\r\n          \r\n          <div className=\"flex justify-end\">\r\n            <button \r\n              type=\"submit\" \r\n              className=\"btn btn-primary\"\r\n              disabled={submitting}\r\n            >\r\n              {submitting ? (\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                  Saving...\r\n                </div>\r\n              ) : (\r\n                'Save Transaction'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TransactionPage ","import React, { useState } from 'react'\r\nimport { useMetadata } from '../hooks/useMetadata'\r\nimport { api, WarehouseCreate, CostTypeCreate } from '../services/api'\r\nimport toast from 'react-hot-toast'\r\n\r\ntype TabType = 'warehouses' | 'costTypes'\r\n\r\nconst ReferenceDataPage: React.FC = () => {\r\n  const { warehouses, costTypes, loading, error, refetch } = useMetadata()\r\n  const [activeTab, setActiveTab] = useState<TabType>('warehouses')\r\n  const [showWarehouseForm, setShowWarehouseForm] = useState(false)\r\n  const [showCostTypeForm, setShowCostTypeForm] = useState(false)\r\n  const [submitting, setSubmitting] = useState(false)\r\n\r\n  // Warehouse form state\r\n  const [warehouseForm, setWarehouseForm] = useState<WarehouseCreate>({\r\n    name: '',\r\n    emoji: '🏢',\r\n    color: '#3B82F6'\r\n  })\r\n\r\n  // Cost type form state\r\n  const [costTypeForm, setCostTypeForm] = useState<CostTypeCreate>({\r\n    name: '',\r\n    is_direct: true\r\n  })\r\n\r\n  const handleWarehouseSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!warehouseForm.name.trim()) {\r\n      toast.error('Warehouse name is required')\r\n      return\r\n    }\r\n\r\n    try {\r\n      setSubmitting(true)\r\n      const response = await api.createWarehouse(warehouseForm)\r\n      \r\n      if (response.error) {\r\n        toast.error(response.error)\r\n        return\r\n      }\r\n      \r\n      toast.success('Warehouse created successfully!')\r\n      setShowWarehouseForm(false)\r\n      setWarehouseForm({ name: '', emoji: '🏢', color: '#3B82F6' })\r\n      refetch()\r\n    } catch (error) {\r\n      toast.error('Failed to create warehouse')\r\n    } finally {\r\n      setSubmitting(false)\r\n    }\r\n  }\r\n\r\n  const handleCostTypeSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!costTypeForm.name.trim()) {\r\n      toast.error('Cost type name is required')\r\n      return\r\n    }\r\n\r\n    try {\r\n      setSubmitting(true)\r\n      const response = await api.createCostType(costTypeForm)\r\n      \r\n      if (response.error) {\r\n        toast.error(response.error)\r\n        return\r\n      }\r\n      \r\n      toast.success('Cost type created successfully!')\r\n      setShowCostTypeForm(false)\r\n      setCostTypeForm({ name: '', is_direct: true })\r\n      refetch()\r\n    } catch (error) {\r\n      toast.error('Failed to create cost type')\r\n    } finally {\r\n      setSubmitting(false)\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (field: string, value: any) => {\r\n    if (activeTab === 'warehouses') {\r\n      setWarehouseForm(prev => ({ ...prev, [field]: value }))\r\n    } else {\r\n      setCostTypeForm(prev => ({ ...prev, [field]: value }))\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Reference Data</h1>\r\n          <p className=\"text-gray-600\">Manage warehouses and cost types</p>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600\"></div>\r\n            <span className=\"ml-2 text-gray-600\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Reference Data</h1>\r\n          <p className=\"text-gray-600\">Manage warehouses and cost types</p>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"text-center py-12\">\r\n            <p className=\"text-red-600\">Error loading data: {error}</p>\r\n            <button \r\n              onClick={() => refetch()}\r\n              className=\"mt-4 btn btn-primary\"\r\n            >\r\n              Retry\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">Reference Data</h1>\r\n        <p className=\"text-gray-600\">Manage warehouses and cost types</p>\r\n      </div>\r\n      \r\n      <div className=\"card\">\r\n        <div className=\"border-b border-gray-200\">\r\n          <nav className=\"-mb-px flex space-x-8\">\r\n            <button \r\n              className={`whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\r\n                activeTab === 'warehouses'\r\n                  ? 'border-primary-500 text-primary-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n              }`}\r\n              onClick={() => setActiveTab('warehouses')}\r\n            >\r\n              Warehouses ({warehouses.length})\r\n            </button>\r\n            <button \r\n              className={`whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\r\n                activeTab === 'costTypes'\r\n                  ? 'border-primary-500 text-primary-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n              }`}\r\n              onClick={() => setActiveTab('costTypes')}\r\n            >\r\n              Cost Types ({costTypes.length})\r\n            </button>\r\n          </nav>\r\n        </div>\r\n        \r\n        <div className=\"mt-6\">\r\n          {activeTab === 'warehouses' && (\r\n            <div>\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h3 className=\"text-lg font-medium text-gray-900\">Warehouses</h3>\r\n                <button \r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => setShowWarehouseForm(true)}\r\n                >\r\n                  Add Warehouse\r\n                </button>\r\n              </div>\r\n              \r\n              {warehouses.length > 0 ? (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {warehouses.map(warehouse => (\r\n                    <div key={warehouse.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                      <div className=\"flex items-center justify-between mb-2\">\r\n                        <div className=\"flex items-center\">\r\n                          <span className=\"text-2xl mr-2\">{warehouse.emoji}</span>\r\n                          <span className=\"font-medium\">{warehouse.name}</span>\r\n                        </div>\r\n                        <div \r\n                          className=\"w-4 h-4 rounded-full border-2 border-gray-300\"\r\n                          style={{ backgroundColor: warehouse.color }}\r\n                        ></div>\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-500\">\r\n                        ID: {warehouse.id.substring(0, 8)}...\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-12\">\r\n                  <p className=\"text-gray-500\">No warehouses found. Add your first warehouse to get started.</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          {activeTab === 'costTypes' && (\r\n            <div>\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h3 className=\"text-lg font-medium text-gray-900\">Cost Types</h3>\r\n                <button \r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => setShowCostTypeForm(true)}\r\n                >\r\n                  Add Cost Type\r\n                </button>\r\n              </div>\r\n              \r\n              {costTypes.length > 0 ? (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                  {costTypes.map(costType => (\r\n                    <div key={costType.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                      <div className=\"flex items-center justify-between mb-2\">\r\n                        <span className=\"font-medium\">{costType.name}</span>\r\n                        <span className={`text-xs font-medium px-2 py-1 rounded ${\r\n                          costType.is_direct \r\n                            ? 'bg-blue-100 text-blue-800' \r\n                            : 'bg-orange-100 text-orange-800'\r\n                        }`}>\r\n                          {costType.is_direct ? 'Direct' : 'Indirect'}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-500\">\r\n                        ID: {costType.id.substring(0, 8)}...\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-12\">\r\n                  <p className=\"text-gray-500\">No cost types found. Add your first cost type to get started.</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Warehouse Form Modal */}\r\n      {showWarehouseForm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Add New Warehouse</h3>\r\n            <form onSubmit={handleWarehouseSubmit} className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">Name *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input mt-1\"\r\n                  value={warehouseForm.name}\r\n                  onChange={(e) => handleInputChange('name', e.target.value)}\r\n                  placeholder=\"Enter warehouse name\"\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">Emoji</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input mt-1\"\r\n                  value={warehouseForm.emoji}\r\n                  onChange={(e) => handleInputChange('emoji', e.target.value)}\r\n                  placeholder=\"🏢\"\r\n                  maxLength={2}\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">Color</label>\r\n                <input\r\n                  type=\"color\"\r\n                  className=\"input mt-1 h-10\"\r\n                  value={warehouseForm.color}\r\n                  onChange={(e) => handleInputChange('color', e.target.value)}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"flex justify-end space-x-3 pt-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => setShowWarehouseForm(false)}\r\n                  disabled={submitting}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={submitting}\r\n                >\r\n                  {submitting ? 'Creating...' : 'Create Warehouse'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Cost Type Form Modal */}\r\n      {showCostTypeForm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Add New Cost Type</h3>\r\n            <form onSubmit={handleCostTypeSubmit} className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">Name *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input mt-1\"\r\n                  value={costTypeForm.name}\r\n                  onChange={(e) => handleInputChange('name', e.target.value)}\r\n                  placeholder=\"Enter cost type name\"\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"flex items-center\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"rounded border-gray-300 text-primary-600 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50\"\r\n                    checked={costTypeForm.is_direct}\r\n                    onChange={(e) => handleInputChange('is_direct', e.target.checked)}\r\n                  />\r\n                  <span className=\"ml-2 text-sm text-gray-700\">Direct cost (vs indirect cost)</span>\r\n                </label>\r\n              </div>\r\n              \r\n              <div className=\"flex justify-end space-x-3 pt-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => setShowCostTypeForm(false)}\r\n                  disabled={submitting}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={submitting}\r\n                >\r\n                  {submitting ? 'Creating...' : 'Create Cost Type'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReferenceDataPage ","import { Routes, Route } from 'react-router-dom'\r\nimport { Toaster } from 'react-hot-toast'\r\nimport { AuthProvider } from './contexts/AuthContext'\r\nimport ProtectedRoute from './components/ProtectedRoute'\r\nimport AuthCallback from './components/AuthCallback'\r\nimport Layout from './components/Layout'\r\nimport LoginPage from './pages/LoginPage'\r\nimport DashboardPage from './pages/DashboardPage'\r\nimport TransactionPage from './pages/TransactionPage'\r\nimport ReferenceDataPage from './pages/ReferenceDataPage'\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <div className=\"min-h-screen bg-gray-50\">\r\n        <Routes>\r\n          <Route path=\"/login\" element={<LoginPage />} />\r\n          <Route path=\"/auth/callback\" element={<AuthCallback />} />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <ProtectedRoute>\r\n                <Layout />\r\n              </ProtectedRoute>\r\n            }\r\n          >\r\n            <Route index element={<DashboardPage />} />\r\n            <Route path=\"transaction\" element={<TransactionPage />} />\r\n            <Route path=\"reference\" element={<ReferenceDataPage />} />\r\n          </Route>\r\n        </Routes>\r\n        <Toaster\r\n          position=\"top-right\"\r\n          toastOptions={{\r\n            duration: 4000,\r\n            style: {\r\n              background: '#363636',\r\n              color: '#fff',\r\n            },\r\n            success: {\r\n              duration: 3000,\r\n              iconTheme: {\r\n                primary: '#22c55e',\r\n                secondary: '#fff',\r\n              },\r\n            },\r\n            error: {\r\n              duration: 5000,\r\n              iconTheme: {\r\n                primary: '#ef4444',\r\n                secondary: '#fff',\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    </AuthProvider>\r\n  )\r\n}\r\n\r\nexport default App ","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\n// Register PWA service worker\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', () => {\r\n    navigator.serviceWorker.register('/sw.js')\r\n      .then((registration) => {\r\n        console.log('SW registered: ', registration)\r\n      })\r\n      .catch((registrationError) => {\r\n        console.log('SW registration failed: ', registrationError)\r\n      })\r\n  })\r\n}\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n) "],"names":["f","require$$0","k","l","m","n","p","q","c","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","generateCodeVerifier","array","generateCodeChallenge","verifier","data","digest","GOOGLE_CLIENT_ID","GOOGLE_REDIRECT_URI","GOOGLE_AUTH_URL","GOOGLE_TOKEN_URL","GOOGLE_USERINFO_URL","SCOPES","_GoogleAuthService","__publicField","codeChallenge","authUrl","error","code","codeVerifier","tokenResponse","tokens","userResponse","user","userData","email","domain","_a","GoogleAuthService","authService","AuthContext","createContext","useAuth","context","useContext","AuthProvider","children","setUser","useState","loading","setLoading","useEffect","storedUser","token","value","jsx","ProtectedRoute","isAuthenticated","jsxs","Navigate","AuthCallback","searchParams","useSearchParams","navigate","useNavigate","setError","toast","Header","onMenuClick","logout","Fragment","Sidebar","isOpen","onClose","filteredNavigation","item","NavLink","isActive","Layout","sidebarOpen","setSidebarOpen","Outlet","LoginPage","login","API_BASE_URL","ApiClient","baseUrl","endpoint","options","url","response","errorData","transaction","warehouse","costType","month","apiClient","api","getCurrentMonth","now","getMonthName","year","monthNum","useReport","initialMonth","report","setReport","currentMonth","setCurrentMonth","fetchReport","err","KPICards","summary","i","cards","card","index","RevenueProfitChart","warehouses","ResponsiveContainer","BarChart","CartesianGrid","XAxis","YAxis","Tooltip","name","label","Legend","Bar","ProfitMarginChart","LineChart","Line","WarehousePerformanceChart","COLORS","PieChart","Pie","percent","entry","Cell","_name","props","_value","DashboardPage","selectedMonth","setSelectedMonth","selectedWarehouse","setSelectedWarehouse","refetch","handleMonthChange","handleWarehouseChange","filteredWarehouses","w","_","date","_b","useMetadata","setWarehouses","costTypes","setCostTypes","fetchMetadata","TransactionPage","metadataLoading","metadataError","formData","setFormData","submitting","setSubmitting","handleSubmit","handleInputChange","field","prev","ReferenceDataPage","activeTab","setActiveTab","showWarehouseForm","setShowWarehouseForm","showCostTypeForm","setShowCostTypeForm","warehouseForm","setWarehouseForm","costTypeForm","setCostTypeForm","handleWarehouseSubmit","handleCostTypeSubmit","App","Routes","Route","Toaster","registration","registrationError","ReactDOM","React","BrowserRouter"],"mappings":"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","x_google_ignoreList":[0,1,2]}